AWSTemplateFormatVersion: '2010-09-09'
Description: aws-network-basis cfn tutorial.
Parameters:
  VpcCIDRRange:
    Description: The CIDR range for this VPC. (x.x.0.0/16)
    Type: String
    Default: 10.0
  ParamDBPassword:
    NoEcho: true
    Description: The database admin account password
    Type: String
    MinLength: 1
    MaxLength: 41
    AllowedPattern: ^[a-zA-Z0-9]*$
  ParamDBUserId:
    Description: The database admin account id
    Type: String
    MinLength: 1
    MaxLength: 41
    AllowedPattern: ^[a-zA-Z0-9]*$

Resources:
  # 第二章
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Sub ${VpcCIDRRange}.0.0/16
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyVPC
  MyPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Sub ${VpcCIDRRange}.1.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: ap-northeast-1d
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyPublicSubnet
  MyGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyInternetGateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MyGateway
      VpcId: !Ref MyVPC
  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyRouteTable
  MyRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyGateway
      RouteTableId: !Ref MyRouteTable
  MySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyRouteTable
      SubnetId: !Ref MyPublicSubnet
  # 第三章
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-WEB-SG
      GroupDescription: "aws-network-basis SecurityGroup"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: "SSH"
          IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          Description: "HTTP"
          IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
        # 第五章 node.js サーバー
        - CidrIp: 0.0.0.0/0
          Description: "node.js server"
          IpProtocol: "tcp"
          FromPort: 8080
          ToPort: 8080
        - CidrIp: 0.0.0.0/0
          Description: "ICMP"
          IpProtocol: "icmp"
          FromPort: -1
          ToPort: -1
      VpcId: !Ref MyVPC
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0a2de1c3b415889d2
      InstanceType: t2.micro
      KeyName: "MyKeypair" # 要事前作成
      AvailabilityZone: ap-northeast-1d
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          DeleteOnTermination: true
          PrivateIpAddress: !Sub ${VpcCIDRRange}.1.10
          SubnetId: !Ref MyPublicSubnet
          GroupSet:
            - !Ref MySecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: standard
            VolumeSize: 8
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Web Server
      # 第四章 Metadata 内容をインストールするらしい
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyInstance --configsets Install --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource MyInstance --region ${AWS::Region}
            # 第五章 node.js サーバー
            curl -sL https://rpm.nodesource.com/setup_6.x | sudo bash -
            sudo yum install -y nodejs
    # 第四章 インストール内容
    Metadata:
      Comment1: chapter4 install httpd
      AWS::CloudFormation::Init:
        configSets:
          Install:
            - Install
        Install:
          packages:
            yum:
              httpd: []
          services:
            sysvinit:
              httpd:
                enable: true
                ensureRunning: true
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
  MyEIP:
    DependsOn: MyVPC
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref MyInstance
      Domain: vpc
      # EIPのTagはつけられないらしい

  # 第六章 プライベートサブネット
  MyPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Sub ${VpcCIDRRange}.2.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: ap-northeast-1d
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyPrivateSubnet
  MyPrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0a2de1c3b415889d2
      InstanceType: t2.micro
      KeyName: MyKeypair
      AvailabilityZone: ap-northeast-1d
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeviceIndex: "0"
          DeleteOnTermination: true
          PrivateIpAddress: !Sub ${VpcCIDRRange}.2.10
          SubnetId: !Ref MyPrivateSubnet
          GroupSet:
            - !Ref MyPrivateSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: standard
            VolumeSize: 8
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-DB Server
  MyPrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-DB-SG
      GroupDescription: "aws-network-basis DB SecurityGroup"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: SSH
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - SourceSecurityGroupId: !Ref MySecurityGroup
          Description: RDBMS
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
        - CidrIp: 0.0.0.0/0
          Description: ICMP
          IpProtocol: icmp
          FromPort: -1
          ToPort: -1
      VpcId: !Ref MyVPC

  # 第7章 NATゲートウェイ用ルートテーブル
  MyPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyPrivateRouteTable
  MyPrivateRoute:
    DependsOn: AttachGateway
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref MyNAT
      RouteTableId: !Ref MyPrivateRouteTable
  MyPrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyPrivateRouteTable
      SubnetId: !Ref MyPrivateSubnet
  # NATゲートウェイ用 EIP
  NATEIP:
    DependsOn: MyVPC
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  MyNAT:
    DependsOn: AttachGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATEIP.AllocationId
      SubnetId: !Ref MyPublicSubnet
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyNAT

  # 第八章改 VPC 内に RDS を組み込む
  MyDBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Sub ${VpcCIDRRange}.3.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: ap-northeast-1a
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyDBSubnet1
  MyDBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Sub ${VpcCIDRRange}.4.0/24
      VpcId: !Ref MyVPC
      AvailabilityZone: ap-northeast-1d
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyDBSubnet2
  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub ${AWS::StackName}-MyDBSubnet
      DBSubnetGroupDescription: description
      SubnetIds:
        - !Ref MyDBSubnet1
        - !Ref MyDBSubnet2
  MyDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Sub ${AWS::StackName}MyRDS # 英数のみ注意
      DBInstanceIdentifier: !Sub ${AWS::StackName}-myrds
      AllocatedStorage: '20'
      DBInstanceClass: db.t2.micro
      Engine: MySQL
      MasterUsername: !Ref ParamDBUserId
      MasterUserPassword: !Ref ParamDBPassword
      DBSubnetGroupName: !Ref MyDBSubnetGroup
      VPCSecurityGroups:
        - !GetAtt
          [ MyPrivateSecurityGroup, GroupId]
    # DeletionPolicy: Snapshot # スナップショット注意
